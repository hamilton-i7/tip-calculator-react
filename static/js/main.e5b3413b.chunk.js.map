{"version":3,"sources":["components/ui/TipInfo.module.scss","components/general/TextField.module.scss","components/ui/Controls.module.scss","components/general/Button.module.scss","components/general/Card.module.scss","components/general/Logo.module.scss","App.module.scss","components/general/Card.js","images/logo.svg","components/general/Logo.js","utils/constants.js","components/general/Button.js","components/general/TextField.js","images/icon-dollar.svg","images/icon-person.svg","components/ui/Controls.js","components/ui/TipInfo.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","className","children","containerTag","classes","card","ContainerTag","Logo","src","logoSrc","alt","logo","PRIMARY","PRIMARY_VARIANT","DISABLED","Button","variant","text","type","onClick","buttonVariant","Constants","styles","btn","getButtonVariant","TextField","id","value","onChange","iconSrc","step","placeholder","lightPlaceholder","error","textfield","input","min","inputWithIcon","Controls","bill","onBillChange","peopleAmount","onPeopleAmountChange","tipButtons","onTipButtonClick","selectedTipButtonID","customPercentage","onCustomPercentageChange","length","errorMessage","htmlFor","dollarSignIcon","map","button","percentage","personIcon","ZERO","isValid","roundToTwo","num","Math","round","TipInfo","onReset","tip","abs","calculateTip","total","absoluteBill","calculateTotal","areFieldsEmpty","App","useState","setBill","tipPercentage","setTipPercentage","setPeopleAmount","selectedButtonID","setSelectedButtonID","setCustomPercentage","e","currentBill","target","currentPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5b3413b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tip-info__container\":\"TipInfo_tip-info__container__3HVqX\",\"tip-info__btn\":\"TipInfo_tip-info__btn__2ohKB\",\"amount-info__container\":\"TipInfo_amount-info__container__2zFo5\",\"amount-info__title\":\"TipInfo_amount-info__title__3HqA0\",\"amount-info__amount\":\"TipInfo_amount-info__amount__17QiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textfield\":\"TextField_textfield___CF3L\",\"textfield--no-icon\":\"TextField_textfield--no-icon__p25Ly\",\"textfield__container\":\"TextField_textfield__container__wvXXA\",\"textfield__icon\":\"TextField_textfield__icon__2m_xL\",\"light-placeholder\":\"TextField_light-placeholder__2M14S\",\"dark-placeholder\":\"TextField_dark-placeholder__3HbhY\",\"error\":\"TextField_error__3mEBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls__container\":\"Controls_controls__container__3H57q\",\"controls__label\":\"Controls_controls__label__2YzkN\",\"tip-percentages__container\":\"Controls_tip-percentages__container__2Ot30\",\"error\":\"Controls_error__39iXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2tyEU\",\"btn--primary\":\"Button_btn--primary__1gDE4\",\"btn--primary-variant\":\"Button_btn--primary-variant__34-0w\",\"btn--disabled\":\"Button_btn--disabled__2NhQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3ELWC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2o9yX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"App_card__3Z6KR\"};","import { card } from './Card.module.scss';\n\nfunction Card({ className = '', children, containerTag = 'div' }) {\n  const classes = `${card} ${className}`;\n  const ContainerTag = containerTag;\n  return <ContainerTag className={classes}>{children}</ContainerTag>;\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","import { logo } from './Logo.module.scss';\nimport logoSrc from '../../images/logo.svg';\n\nfunction Logo() {\n  return (\n    <header>\n      <img src={logoSrc} alt=\"tip calculator logo\" className={logo} />\n    </header>\n  );\n}\n\nexport default Logo;\n","export const PRIMARY = 'primary';\nexport const PRIMARY_VARIANT = 'primary-variant';\nexport const DISABLED = 'disabled';\n","import styles from './Button.module.scss';\nimport * as Constants from '../../utils/constants';\n\nfunction Button({ variant, text, className = '', type = 'button', onClick }) {\n  const classes = `${getButtonVariant(variant)} ${className}`;\n  return (\n    <button type={type} className={classes} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\n\nfunction getButtonVariant(variant) {\n  let buttonVariant;\n  switch (variant) {\n    case Constants.PRIMARY:\n      buttonVariant = styles['btn--primary'];\n      break;\n    case Constants.PRIMARY_VARIANT:\n      buttonVariant = styles['btn--primary-variant'];\n      break;\n    case Constants.DISABLED:\n      buttonVariant = styles['btn--disabled'];\n      break;\n    default:\n      buttonVariant = styles.btn;\n  }\n  return buttonVariant;\n}\n\nexport default Button;\n","import styles from './TextField.module.scss';\n\nfunction TextField({\n  id,\n  className = '',\n  value,\n  onChange,\n  iconSrc = '',\n  step = '1',\n  placeholder = '',\n  lightPlaceholder = true,\n  error = false,\n}) {\n  const classes = `${\n    iconSrc ? styles.textfield : styles['textfield--no-icon']\n  } ${\n    lightPlaceholder ? styles['light-placeholder'] : styles['dark-placeholder']\n  } ${error ? styles.error : ''} ${className}`;\n  const input = (\n    <input\n      type=\"number\"\n      step={step}\n      className={classes}\n      placeholder={placeholder}\n      id={id}\n      value={value}\n      onChange={onChange}\n      min=\"0\"\n    />\n  );\n  const inputWithIcon = (\n    <div className={styles['textfield__container']}>\n      {input}\n      <img\n        src={iconSrc}\n        alt=\"textfield icon\"\n        className={styles['textfield__icon']}\n      />\n    </div>\n  );\n\n  return <>{iconSrc ? inputWithIcon : input}</>;\n}\n\nexport default TextField;\n","export default __webpack_public_path__ + \"static/media/icon-dollar.9f9be353.svg\";","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import Button from '../general/Button';\nimport TextField from '../general/TextField';\nimport styles from './Controls.module.scss';\nimport dollarSignIcon from '../../images/icon-dollar.svg';\nimport personIcon from '../../images/icon-person.svg';\nimport * as Constants from '../../utils/constants';\n\nfunction Controls({\n  bill,\n  onBillChange,\n  peopleAmount,\n  onPeopleAmountChange,\n  tipButtons,\n  onTipButtonClick,\n  selectedTipButtonID,\n  customPercentage,\n  onCustomPercentageChange,\n}) {\n  const error = peopleAmount.length !== 0 && +peopleAmount === 0;\n  const errorMessage = <span className={styles.error}>Can't be zero</span>;\n\n  return (\n    <div className={styles['controls__container']}>\n      <label htmlFor=\"bill\" className={styles['controls__label']}>\n        Bill\n      </label>\n      <TextField\n        id=\"bill\"\n        iconSrc={dollarSignIcon}\n        step=\"0.01\"\n        placeholder=\"0\"\n        value={bill}\n        onChange={onBillChange}\n      />\n      <label className={styles['controls__label']} htmlFor=\"custom\">\n        Select Tip %\n      </label>\n      <div className={styles['tip-percentages__container']}>\n        {tipButtons.map(button => (\n          <Button\n            key={button.id}\n            text={button.percentage * 100 + '%'}\n            variant={\n              button.id === selectedTipButtonID\n                ? Constants.PRIMARY_VARIANT\n                : Constants.PRIMARY\n            }\n            onClick={() => onTipButtonClick(button)}\n          />\n        ))}\n        <TextField\n          id=\"custom\"\n          placeholder=\"Custom\"\n          lightPlaceholder={false}\n          value={customPercentage}\n          onChange={onCustomPercentageChange}\n        />\n      </div>\n      <label htmlFor=\"people-amount\" className={styles['controls__label']}>\n        <span>Number of People</span>\n        {error && errorMessage}\n      </label>\n      <TextField\n        id=\"people-amount\"\n        iconSrc={personIcon}\n        error={error}\n        placeholder=\"0\"\n        value={peopleAmount}\n        onChange={onPeopleAmountChange}\n      />\n    </div>\n  );\n}\n\nexport default Controls;\n","import Button from '../general/Button';\nimport styles from './TipInfo.module.scss';\nimport * as Constants from '../../utils/constants';\n\nconst ZERO = '0.00';\n\nfunction TipInfo({ bill, percentage, peopleAmount, onReset }) {\n  const tip = isValid(+peopleAmount)\n    ? calculateTip(+bill, percentage, peopleAmount)\n    : ZERO;\n  const total = isValid(+peopleAmount)\n    ? calculateTotal(+bill, percentage, peopleAmount)\n    : ZERO;\n  const buttonVariant = areFieldsEmpty(\n    bill + '',\n    percentage + '',\n    peopleAmount + ''\n  )\n    ? Constants.DISABLED\n    : Constants.PRIMARY_VARIANT;\n  return (\n    <div className={styles['tip-info__container']}>\n      <div className={styles['amount-info__container']}>\n        <h2 className={styles['amount-info__title']}>\n          Tip Amount\n          <span>/ person</span>\n        </h2>\n        <p className={styles['amount-info__amount']}>${tip}</p>\n      </div>\n      <div className={styles['amount-info__container']}>\n        <h2 className={styles['amount-info__title']}>\n          Total\n          <span>/ person</span>\n        </h2>\n        <p className={styles['amount-info__amount']}>${total}</p>\n      </div>\n      <Button\n        text=\"RESET\"\n        variant={buttonVariant}\n        className={styles['tip-info__btn']}\n        onClick={() => {\n          if (buttonVariant !== Constants.DISABLED) onReset();\n        }}\n      />\n    </div>\n  );\n}\n\nfunction calculateTotal(bill, percentage, peopleAmount) {\n  const absoluteBill = Math.abs(bill);\n  const result =\n    (absoluteBill + absoluteBill * Math.abs(percentage)) /\n    Math.abs(peopleAmount);\n  return roundToTwo(result);\n}\n\nfunction calculateTip(bill, percentage, peopleAmount) {\n  return roundToTwo(\n    (Math.abs(bill) * Math.abs(percentage)) / Math.abs(peopleAmount)\n  );\n}\n\nfunction isValid(peopleAmount) {\n  return peopleAmount !== 0;\n}\n\nfunction roundToTwo(num) {\n  return +(Math.round(num + 'e+2') + 'e-2');\n}\n\nfunction areFieldsEmpty(bill, percentage, peopleAmount) {\n  return (\n    bill.length === 0 && percentage.length === 0 && peopleAmount.length === 0\n  );\n}\n\nexport default TipInfo;\n","import Card from './components/general/Card';\nimport Logo from './components/general/Logo';\nimport Controls from './components/ui/Controls';\nimport TipInfo from './components/ui/TipInfo';\nimport { card } from './App.module.scss';\nimport { useState } from 'react';\n\nconst tipButtons = [\n  {\n    id: '000',\n    percentage: 0.05,\n  },\n  {\n    id: '001',\n    percentage: 0.1,\n  },\n  {\n    id: '002',\n    percentage: 0.15,\n  },\n  {\n    id: '003',\n    percentage: 0.25,\n  },\n  {\n    id: '004',\n    percentage: 0.5,\n  },\n];\n\nfunction App() {\n  const [bill, setBill] = useState('');\n  const [tipPercentage, setTipPercentage] = useState('');\n  const [peopleAmount, setPeopleAmount] = useState('');\n  const [selectedButtonID, setSelectedButtonID] = useState('');\n  const [customPercentage, setCustomPercentage] = useState('');\n\n  const billHandler = e => {\n    const currentBill = e.target.value;\n    setBill(currentBill);\n  };\n\n  const peopleAmountHandler = e => {\n    setPeopleAmount(e.target.value);\n  };\n\n  const tipPercentageHandler = button => {\n    setTipPercentage(button.percentage);\n    setSelectedButtonID(button.id);\n\n    //* Clear custom percentage field if there's a value\n    if (customPercentage) setCustomPercentage('');\n  };\n\n  const customPercentageHandler = e => {\n    const currentPercentage = e.target.value;\n    setCustomPercentage(currentPercentage);\n    setTipPercentage(+currentPercentage / 100);\n\n    //* Unselected any percentage button if there's one\n    if (currentPercentage) setSelectedButtonID(null);\n  };\n\n  const resetHandler = () => {\n    setBill('');\n    setTipPercentage('');\n    setPeopleAmount('');\n    setSelectedButtonID('');\n  };\n\n  return (\n    <>\n      <Logo />\n      <main>\n        <Card className={card}>\n          <Controls\n            bill={bill}\n            onBillChange={billHandler}\n            peopleAmount={peopleAmount}\n            onPeopleAmountChange={peopleAmountHandler}\n            tipButtons={tipButtons}\n            onTipButtonClick={tipPercentageHandler}\n            selectedTipButtonID={selectedButtonID}\n            customPercentage={customPercentage}\n            onCustomPercentageChange={customPercentageHandler}\n          />\n          <TipInfo\n            bill={bill}\n            peopleAmount={peopleAmount}\n            percentage={tipPercentage}\n            onReset={resetHandler}\n          />\n        </Card>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}